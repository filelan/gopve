// Code generated by mockery v2.2.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	node "github.com/xabinapal/gopve/pkg/types/node"
)

// Node is an autogenerated mock type for the Node type
type Node struct {
	mock.Mock
}

// Get provides a mock function with given fields: _a0
func (_m *Node) Get(_a0 string) (node.Node, error) {
	ret := _m.Called(_a0)

	var r0 node.Node
	if rf, ok := ret.Get(0).(func(string) node.Node); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(node.Node)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// List provides a mock function with given fields:
func (_m *Node) List() ([]node.Node, error) {
	ret := _m.Called()

	var r0 []node.Node
	if rf, ok := ret.Get(0).(func() []node.Node); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]node.Node)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
